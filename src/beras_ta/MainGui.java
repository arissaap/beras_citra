/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package beras_ta;

import java.awt.image.BufferedImage;
import java.io.IOException;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.table.DefaultTableModel;
import net.sf.jasperreports.engine.JREmptyDataSource;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.data.JRBeanCollectionDataSource;
import net.sf.jasperreports.view.JasperViewer;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.chart.plot.XYPlot;
import org.jfree.chart.renderer.xy.XYLineAndShapeRenderer;
import org.jfree.data.general.Dataset;
import org.jfree.data.xy.XYDataset;
import org.jfree.data.xy.XYSeries;
import org.jfree.data.xy.XYSeriesCollection;

import javax.swing.JOptionPane;
import static javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE;

/**
 *
 * @author Arissa
 */
public class MainGui extends javax.swing.JFrame {

    ImageController basic_im = new ImageController();
    ImageArray arrIm = new ImageArray();
    SegmentImage segment = new SegmentImage();
    Histogram histg = new Histogram();
    SizeObject size = new SizeObject();
    Analyze_whiteRice white = new Analyze_whiteRice();
    Analyze_cleanRice clean = new Analyze_cleanRice();

    public double n_data_object = 0;
    public double n_presentase_putih = 0;
    public double n_presentase_bersih = 0;
    public double n_presentase_utuh = 0;

    public boolean isActive = false;
    public boolean isUtuh = false;
    public boolean isBersih = false;
    public boolean isPutih = false;
    public boolean isCvs = false;
    public boolean isReset = false;

    double percent_bersih = 75;
    double percent_putih = 75;
    double percent_utuh = 75;

    Dataset dataset;
    JFreeChart chart;
    String title;
    private int presentase_utuh;

    /**
     * Creates new form mainGui
     */
    public MainGui() {
        initComponents();
        int witdh__ = 300;
        this.basic_im.setSizeWidthHeightResize(witdh__, witdh__, this.segment);
        this.arrIm.setSizeWidthHeight(witdh__, witdh__);
        this.segment.setSizeWidthHeight(witdh__, witdh__);
        this.histg.setSizeWidthHeight(witdh__, witdh__);
        this.size.setSizeWidthHeight(witdh__, witdh__);
        this.white.setSizeWidthHeight(witdh__, witdh__);
        this.clean.setSizeWidthHeight(witdh__, witdh__);
        setTitle("Program Identifikasi Kualitas Beras");
        ImageIcon img = new ImageIcon("C:\\Users\\Arissa\\Pictures\\New folder\\e.png");
        setIconImage(img.getImage());
        closeAction();
    }

    public void histogram(int[] data) {

        // menggunakan class XYSeries
        XYSeries hist = new XYSeries("Histogram");
        for (int i = 0; i < data.length; i++) {
            hist.add(i, data[i]);
        }

        //memasukan objek class XYSeries kedalam XYSeriesCollection
        XYSeriesCollection datasetcollection = new XYSeriesCollection();
        datasetcollection.addSeries(hist);

        this.dataset = datasetcollection;

        this.chart = ChartFactory.createXYLineChart(
                this.title, // Judul
                "Data ", // label x
                "Jumlah ", //label y
                (XYDataset) this.dataset, // Dataset
                PlotOrientation.VERTICAL, // Plot Orientation
                true, // legend?
                true, //  tooltips?
                false // URL
        );
        //modifikasi plot

        XYPlot xyplot = (XYPlot) chart.getPlot();

        XYLineAndShapeRenderer xylineandshaperenderer = (XYLineAndShapeRenderer) xyplot.getRenderer();
        xylineandshaperenderer.setBaseShapesVisible(true);
        xylineandshaperenderer.setBaseShapesFilled(true);

        BufferedImage img = this.chart.createBufferedImage(280, 230);
        this.box_image2.setIcon(new ImageIcon(img));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panel = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        txt_id3 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txt_c45 = new javax.swing.JLabel();
        tab = new javax.swing.JTabbedPane();
        tab_home = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txt_path_image = new javax.swing.JTextField();
        btn_browse = new javax.swing.JButton();
        box_img_ori = new javax.swing.JButton();
        jButton_grayscale = new javax.swing.JButton();
        jButton_biner = new javax.swing.JButton();
        jButton_segment = new javax.swing.JButton();
        jButton_reset = new javax.swing.JButton();
        btn_label_jumlah = new javax.swing.JButton();
        jTextField_jumlah = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jButton_jumlah = new javax.swing.JButton();
        tab_riceQuality = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        box_image2 = new javax.swing.JButton();
        btn_ext_putih = new javax.swing.JButton();
        btn_ext_bersih = new javax.swing.JButton();
        btn_ext_utuh = new javax.swing.JButton();
        countRice = new javax.swing.JComboBox();
        btn_histogram = new javax.swing.JButton();
        btn_id_putih = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        btn_id_bersih = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        btn_id_utuh = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        btn_id3_clasification = new javax.swing.JButton();
        btn_idc45_clasification = new javax.swing.JButton();
        text_putih = new javax.swing.JTextField();
        text_bersih = new javax.swing.JTextField();
        text_utuh = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        tab_report = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tbl_data_log = new javax.swing.JTable();
        btn_print = new javax.swing.JButton();
        jScrollPane5 = new javax.swing.JScrollPane();
        jTable_info = new javax.swing.JTable();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        table_rice = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel2.setText("Klasifikasi ID3");

        txt_id3.setText("_");

        jLabel3.setText("Klasifikasi C45");

        txt_c45.setText("_");

        javax.swing.GroupLayout panelLayout = new javax.swing.GroupLayout(panel);
        panel.setLayout(panelLayout);
        panelLayout.setHorizontalGroup(
            panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelLayout.createSequentialGroup()
                .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel2)
                    .addComponent(txt_id3, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(txt_c45, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        panelLayout.setVerticalGroup(
            panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txt_id3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txt_c45)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        tab.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel1.setText("Silahkan Masukkan Gambar Beras :");

        btn_browse.setText("Browse");
        btn_browse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_browseActionPerformed(evt);
            }
        });

        box_img_ori.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                box_img_oriActionPerformed(evt);
            }
        });

        jButton_grayscale.setText("Konversi Grayscale");
        jButton_grayscale.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_grayscaleActionPerformed(evt);
            }
        });

        jButton_biner.setText("Konversi Biner");
        jButton_biner.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_binerActionPerformed(evt);
            }
        });

        jButton_segment.setText("Segmentasi");
        jButton_segment.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_segmentActionPerformed(evt);
            }
        });

        jButton_reset.setText("Reset");
        jButton_reset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_resetActionPerformed(evt);
            }
        });

        btn_label_jumlah.setText("Labelling");
        btn_label_jumlah.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_label_jumlahActionPerformed(evt);
            }
        });

        jTextField_jumlah.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField_jumlahActionPerformed(evt);
            }
        });

        jLabel4.setText("Jumlah beras:");

        jButton_jumlah.setText("Jumlah Beras");
        jButton_jumlah.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_jumlahActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout tab_homeLayout = new javax.swing.GroupLayout(tab_home);
        tab_home.setLayout(tab_homeLayout);
        tab_homeLayout.setHorizontalGroup(
            tab_homeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tab_homeLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(tab_homeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addGroup(tab_homeLayout.createSequentialGroup()
                        .addGroup(tab_homeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, tab_homeLayout.createSequentialGroup()
                                .addComponent(txt_path_image, javax.swing.GroupLayout.PREFERRED_SIZE, 279, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btn_browse, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(box_img_ori, javax.swing.GroupLayout.PREFERRED_SIZE, 378, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(tab_homeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(tab_homeLayout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addGap(13, 13, 13)
                                .addComponent(jTextField_jumlah, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jButton_biner, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton_grayscale, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton_segment, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btn_label_jumlah, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton_jumlah, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton_reset, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(0, 13, Short.MAX_VALUE))
        );
        tab_homeLayout.setVerticalGroup(
            tab_homeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tab_homeLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(tab_homeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btn_browse, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(txt_path_image, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(tab_homeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(tab_homeLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(box_img_ori, javax.swing.GroupLayout.PREFERRED_SIZE, 384, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(tab_homeLayout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addComponent(jButton_grayscale)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton_biner)
                        .addGap(18, 18, 18)
                        .addComponent(jButton_segment, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btn_label_jumlah, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton_jumlah)
                        .addGap(18, 18, 18)
                        .addGroup(tab_homeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(jTextField_jumlah, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton_reset)))
                .addGap(0, 29, Short.MAX_VALUE))
        );

        tab.addTab("Home", tab_home);

        box_image2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                box_image2ActionPerformed(evt);
            }
        });

        btn_ext_putih.setText("Ekstraksi Ciri Putih");
        btn_ext_putih.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_ext_putihActionPerformed(evt);
            }
        });

        btn_ext_bersih.setText("Ekstraksi Ciri Bersih");
        btn_ext_bersih.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_ext_bersihActionPerformed(evt);
            }
        });

        btn_ext_utuh.setText("Ekstraksi Ciri Utuh");
        btn_ext_utuh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_ext_utuhActionPerformed(evt);
            }
        });

        countRice.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        countRice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                countRiceActionPerformed(evt);
            }
        });

        btn_histogram.setText("Histogram");
        btn_histogram.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_histogramActionPerformed(evt);
            }
        });

        btn_id_putih.setText("Identifikasi Putih");
        btn_id_putih.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_id_putihActionPerformed(evt);
            }
        });

        jLabel6.setText("Deteksi Putih:");

        jLabel7.setText("Deteksi Bersih:");

        btn_id_bersih.setText("Identifikasi Bersih");
        btn_id_bersih.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_id_bersihActionPerformed(evt);
            }
        });

        jLabel8.setText("Deteksi Utuh:");

        btn_id_utuh.setText("Identifikasi Utuh");
        btn_id_utuh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_id_utuhActionPerformed(evt);
            }
        });

        jLabel9.setText("Histogram");

        btn_id3_clasification.setText("Klasifikasi ID3");
        btn_id3_clasification.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_id3_clasificationActionPerformed(evt);
            }
        });

        btn_idc45_clasification.setText("Klasifikasi C.45");
        btn_idc45_clasification.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_idc45_clasificationActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(box_image2, javax.swing.GroupLayout.PREFERRED_SIZE, 324, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(btn_id_utuh, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(text_utuh, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(btn_ext_utuh, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel6)
                                .addComponent(jLabel7)
                                .addComponent(jLabel8)
                                .addComponent(btn_ext_bersih, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btn_ext_putih, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(countRice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(btn_histogram, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addComponent(btn_id3_clasification, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel9)
                                .addComponent(btn_idc45_clasification, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(btn_id_putih, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(text_putih, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btn_id_bersih, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(text_bersih)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_ext_putih)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btn_id_putih)
                            .addComponent(text_putih, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_ext_bersih)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btn_id_bersih)
                            .addComponent(text_bersih, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel8)
                        .addGap(5, 5, 5)
                        .addComponent(btn_ext_utuh)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btn_id_utuh)
                            .addComponent(text_utuh, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(11, 11, 11)
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btn_histogram)
                            .addComponent(countRice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btn_id3_clasification)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btn_idc45_clasification))
                    .addComponent(box_image2, javax.swing.GroupLayout.PREFERRED_SIZE, 348, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(87, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 322, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout tab_riceQualityLayout = new javax.swing.GroupLayout(tab_riceQuality);
        tab_riceQuality.setLayout(tab_riceQualityLayout);
        tab_riceQualityLayout.setHorizontalGroup(
            tab_riceQualityLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tab_riceQualityLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(tab_riceQualityLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        tab_riceQualityLayout.setVerticalGroup(
            tab_riceQualityLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tab_riceQualityLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        tab.addTab("Deteksi Kualitas Beras", tab_riceQuality);

        tbl_data_log.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "No" ,"Tanggal Pengujian", "Nilai Putih", "Nilai Bersih", "Nilai Utuh", "Klasifikasi ID3" , "Klasifikasi C.45"
            }
        ));
        tbl_data_log.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        jScrollPane3.setViewportView(tbl_data_log);

        btn_print.setText("Print");
        btn_print.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_printActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(btn_print, javax.swing.GroupLayout.PREFERRED_SIZE, 296, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 536, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addComponent(btn_print)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 432, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29))
        );

        javax.swing.GroupLayout tab_reportLayout = new javax.swing.GroupLayout(tab_report);
        tab_report.setLayout(tab_reportLayout);
        tab_reportLayout.setHorizontalGroup(
            tab_reportLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tab_reportLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        tab_reportLayout.setVerticalGroup(
            tab_reportLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tab_reportLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        tab.addTab("Report", tab_report);

        jTable_info.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"", "", "", ""},
                {"", "", "", ""},
                {"", "", "", ""},
                {"", "", "", ""},
            },
            new String [] {
                "No", "Putih", "Bersih", "Utuh"
            }
        ));
        jScrollPane5.setViewportView(jTable_info);

        jLabel5.setText("Tabel Informasi Data Beras");

        table_rice.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"Jumlah ", null, null},
                {"Putih ", null, null},
                {"Bersih ", null, null},
                {"Utuh", null, null}
            },
            new String [] {
                "Properti", "Prosentase", "Nilai Deteksi"
            }
        ));
        jScrollPane1.setViewportView(table_rice);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(tab, javax.swing.GroupLayout.PREFERRED_SIZE, 567, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 253, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(panel, javax.swing.GroupLayout.PREFERRED_SIZE, 88, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 327, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(panel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addComponent(tab, javax.swing.GroupLayout.PREFERRED_SIZE, 507, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        tab.getAccessibleContext().setAccessibleName("Home");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn_printActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_printActionPerformed
        // TODO add your handling code here:

        int n_row = this.tbl_data_log.getRowCount(); //===> ambil informasi mengenai jumlah baris dari table log
        DefaultTableModel model = (DefaultTableModel) this.tbl_data_log.getModel(); //==> ambil model table

        printData Data = new printData();
        Map params = new HashMap();
        List<printData> listOfData = new ArrayList<>();
        for (int i = 1; i < n_row; i++) {
            //Data = new printData();
            String no = model.getValueAt(i, 0).toString();
            String tgl = model.getValueAt(i, 1).toString();
            String putih = model.getValueAt(i, 2).toString();
            String bersih = model.getValueAt(i, 3).toString();
            String utuh = model.getValueAt(i, 4).toString();
            String id3 = model.getValueAt(i, 5).toString();
            String c45 = model.getValueAt(i, 6).toString();
            Data.setCol(no, tgl, putih, bersih, utuh, id3, c45);
            listOfData.add(Data);
        }

        JRBeanCollectionDataSource dataSource = new JRBeanCollectionDataSource(listOfData);
        System.out.println(dataSource.getRecordCount());
        params.put("dataSource", dataSource);

        try {
            JasperPrint printer = JasperFillManager.fillReport(getClass().getResourceAsStream("laporan.jasper"), params, new JREmptyDataSource());

            JasperViewer jv = new JasperViewer(printer, false);
            jv.setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
            jv.setVisible(true);
        } catch (JRException ex) {
        }
    }//GEN-LAST:event_btn_printActionPerformed

    private void btn_label_jumlahActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_label_jumlahActionPerformed
        // TODO add your handling code here:
        if (this.basic_im.isOpenImage) {
            //===> panggil fungsi untuk menggambar jumlah data
            int[] num = new int[this.segment.count + 1];
            for (int i = 0; i <= this.segment.count; i++) {
                if (this.size.size[i] <= 451) {
                    num[i] = i;
                } else {
                    num[i] = 0;
                }
            }

            //===> tampilkan counter di layar
            BufferedImage buff = this.basic_im.drawStringFromCordinat(this.segment.seg2RgbImage((this.arrIm.rgb), (this.segment.img)),
                    this.segment.cordinat_x, this.segment.cordinat_y, num, this.segment.count);
            //===> panggil fungsi untuk menampilkan data label
            //this.box_image3.setIcon(new ImageIcon(buff));
            //==> tambahkan jumlah beras ke variabel global utama
            this.n_data_object = this.segment.count;

            //===> tampilkan counter di layar
            //BufferedImage buff_1 = this.basic_im.drawStringFromCordinat(this.basic_im.getImageResize(), this.segment.cordinat_x, this.segment.cordinat_y, num, this.segment.count);
            //===> panggil fungsi untuk menampilkan data label
            this.box_img_ori.setIcon(new ImageIcon(buff));

        } else {
            JOptionPane.showMessageDialog(null, "Masukkan gambar terlebih dahulu!");
        }
    }//GEN-LAST:event_btn_label_jumlahActionPerformed

    private void jButton_resetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_resetActionPerformed
        // TODO add your handling code here:
        int resetButton = JOptionPane.showConfirmDialog(
                null, "Yakin hapus gambar ini?", "Konfirmasi",
                JOptionPane.OK_CANCEL_OPTION);
        if (resetButton == JOptionPane.OK_OPTION) {
            this.box_img_ori.setIcon(null);
            this.box_image2.setIcon(null);
            this.txt_path_image.setText(null);
            this.text_bersih.setText(null);
            this.text_putih.setText(null);
            this.text_utuh.setText(null);
            this.jTextField_jumlah.setText(null);
            this.blankOutput();
            this.basic_im.isOpenImage = false;
        }
        setDefaultCloseOperation(DO_NOTHING_ON_CLOSE);
    }//GEN-LAST:event_jButton_resetActionPerformed

    private void jButton_segmentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_segmentActionPerformed
        // TODO add your handling code here:
        if (this.basic_im.isOpenImage) {
            this.segment.img = this.segment.label(this.arrIm.bin);
            this.segment.img = this.segment.noiseCorrectionLabel(this.segment.img, this.segment.count);
            //this.box_img_ori.setIcon(new ImageIcon(this.arrIm.segArray2Image(this.segment.img)));
            this.box_img_ori.setIcon(new ImageIcon(this.segment.seg2RgbImage((this.arrIm.rgb),(this.segment.img))));
        } else {
            JOptionPane.showMessageDialog(null, "Masukkan gambar terlebih dahulu!");
        }
    }//GEN-LAST:event_jButton_segmentActionPerformed

    private void jButton_binerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_binerActionPerformed
        // TODO add your handling code here:
        if (this.basic_im.isOpenImage) {
            this.box_img_ori.setIcon(new ImageIcon(this.arrIm.binArray2Image(this.arrIm.bin)));
        } else {
            JOptionPane.showMessageDialog(null, "Masukkan gambar terlebih dahulu!");
        }
    }//GEN-LAST:event_jButton_binerActionPerformed

    private void jButton_grayscaleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_grayscaleActionPerformed
        // TODO add your handling code here:
        if (this.basic_im.isOpenImage) {
            this.box_img_ori.setIcon(new ImageIcon(this.arrIm.grayArray2Image(this.arrIm.gray)));
        } else {
            JOptionPane.showMessageDialog(null, "Masukkan gambar terlebih dahulu!");
        }
    }//GEN-LAST:event_jButton_grayscaleActionPerformed

    private void box_img_oriActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_box_img_oriActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_box_img_oriActionPerformed

    private void btn_browseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_browseActionPerformed
        if (!this.basic_im.isOpenImage) {
            try {
                this.basic_im.openImage();
            } catch (IOException ex) {
                Logger.getLogger(MainGui.class.getName()).log(Level.SEVERE, null, ex);
            }
            if (this.basic_im.isOpenImage) {
                //===> chek apakah gambar jadi dibuka

                this.setTitle("Loading...."); //==> set judul loading untuk menunjukan proses image proessing

                //===> lakukan proses untuk grayscale dan binerisasi
                this.arrIm.rgb = this.arrIm.BufferedImageIntoArray(this.basic_im.getImageResize());
                this.arrIm.gray = this.arrIm.rgbArray2Gray(this.arrIm.rgb);
                this.arrIm.bin = this.arrIm.grayArray2Bin(this.arrIm.gray);

                //===> lakukan proses rgb 2 hsv
                this.arrIm.hsv = this.arrIm.rgbArray2HSV(this.arrIm.rgb);

                //===> panggil fungsi untuk segmentasi gambar biner
                this.segment.img = this.segment.label(this.arrIm.bin);
                this.segment.img = this.segment.noiseCorrectionLabel(this.segment.img, this.segment.count);

                //===> panggil fungsi untuk mencari kordinat objeck
                this.segment.getCordinat(this.segment.img, this.segment.count);

                //===> panggil fungsi untuk mendapatkan informasi histogram tiap beras di gambar
                this.histg.getDataMaxEachObjeckOnLabelImage(this.arrIm.gray, this.segment.img, this.segment.count);
                //===> panggil fungsi untuk mengambil histogram hsv
                this.histg.hist_hsv = this.histg.getHistogram_hsv(this.arrIm.hsv, this.segment.img, this.segment.count);
                //===> panggil fungsi untuk min dan max hsv histogram
                this.histg.minMaxHist = this.histg.getMinMaxHistogram_hsv(this.histg.hist_hsv, this.segment.count);

                //===> panggil fungsi untuk menganalisa beras
                this.white.process(this.arrIm.hsv, this.segment.img, this.segment.count);
                this.clean.process(this.arrIm.hsv, this.segment.img, this.segment.count);

                //===> ambil jumlah data ukuran tiap beras
                this.size.processMaxObject(this.segment.img, this.segment.count);

                //===> tambahkan nomor beras ke combo box dropdown
                this.countRice.removeAllItems();
                for (int i = 1; i <= this.segment.count; i++) {
                    this.countRice.addItem(String.valueOf(i));
                }

                //tampilkan nama dan path beras
                this.txt_path_image.setText(this.basic_im.path);
                this.setTitle(this.basic_im.name);

                //===> reset parameter object
                this.n_data_object = 0;
                this.n_presentase_bersih = 0.0;
                this.n_presentase_putih = 0.0;
                this.n_presentase_utuh = 0.0;

                this.isUtuh = false;
                this.isBersih = false;
                this.isPutih = false;

                //===> tampilkan data beras
//                this.setDataTableInformationrice();
                this.blankOutput();
                //===> tampilkan gambar beras ke gui
                this.box_img_ori.setIcon(new ImageIcon(this.basic_im.getImageResize()));
                //this.box_image2.setIcon(new ImageIcon(this.basic_im.getImageResize()));
                //this.box_image2.setIcon(new ImageIcon(this.arrIm.binArray2Image(this.arrIm.bin)));
                //this.box_image2.setIcon(new ImageIcon(this.arrIm.binArray2Image(this.segment.img)));
                this.box_image2.setIcon(new ImageIcon(this.segment.seg2RgbImage((this.arrIm.rgb), (this.segment.img))));
                //this.box_image2.setIcon(new ImageIcon(this.arrIm.rgbArray2Image(this.arrIm.rgb)));
            }
        } else {
            JOptionPane.showMessageDialog(null, "Gambar masih aktif! Reset terlebih dahulu untuk memproses gambar lainnya");
        }
    }//GEN-LAST:event_btn_browseActionPerformed

    private void btn_histogramActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_histogramActionPerformed
        // TODO add your handling code here:
        if (this.basic_im.isOpenImage) {
            String selected = (String) this.countRice.getSelectedItem();
            int idx = (int) Double.parseDouble(selected);
            int buffer[] = new int[255];
            for (int i = 0; i < 255; i++) {
                buffer[i] = (int) this.histg.hist[i][idx];
            }
            this.histogram(buffer);

            System.out.println("Objeck Index : " + String.valueOf(idx) + " Maximal dan Minimal Histogram HSV");
            System.out.println("Hue Min : " + String.valueOf(this.histg.minMaxHist[0][idx][0]) + " Max : " + String.valueOf(this.histg.minMaxHist[1][idx][0]));
            System.out.println("Sat Min : " + String.valueOf(this.histg.minMaxHist[0][idx][1]) + " Max : " + String.valueOf(this.histg.minMaxHist[1][idx][1]));
            System.out.println("Val Min : " + String.valueOf(this.histg.minMaxHist[0][idx][2]) + " Max : " + String.valueOf(this.histg.minMaxHist[1][idx][2]));
        } else {
            JOptionPane.showMessageDialog(null, "Masukkan gambar terlebih dahulu!");
        }
    }//GEN-LAST:event_btn_histogramActionPerformed

    private void countRiceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_countRiceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_countRiceActionPerformed

    private void btn_idc45_clasificationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_idc45_clasificationActionPerformed
        // TODO add your handling code here:
        if (this.basic_im.isOpenImage) {
            this.txt_c45.setText(this.decision_c45());
            addNewDataIntoLog();
        } else {
            JOptionPane.showMessageDialog(null, "Masukkan gambar terlebih dahulu!");
        }
    }//GEN-LAST:event_btn_idc45_clasificationActionPerformed

    private void btn_id3_clasificationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_id3_clasificationActionPerformed
        // TODO add your handling code here:
        if (this.basic_im.isOpenImage) {
            this.txt_id3.setText(this.decision_id3());
        } else {
            JOptionPane.showMessageDialog(null, "Masukkan gambar terlebih dahulu!");
        }
    }//GEN-LAST:event_btn_id3_clasificationActionPerformed

    private void btn_ext_utuhActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_ext_utuhActionPerformed
        // TODO add your handling code here:
        if (this.basic_im.isOpenImage) {
            //==> ambil persentase jumlah beras utuh
            this.n_presentase_utuh = 0;
            boolean sts[] = new boolean[this.segment.count + 1];
            //int sts[] = new int[this.segment.count + 1];
            for (int i = 1; i <= this.segment.count; i++) {
                if (this.size.size[i] >= 278) {
                    this.n_presentase_utuh = this.n_presentase_utuh + 1;
                    sts[i] = true;
                } else {
                    sts[i] = false;
                }
            }

            int[] num = new int[this.segment.count + 1];
            for (int i = 0; i <= this.segment.count; i++) {
                if (this.size.size[i] <= 451) {
                    num[i] = i;
                } else {
                    num[i] = 0;
                }
            }

            //===> tampilkan beras utuh dan tidak  di layar
            BufferedImage buff_1 = this.basic_im.drawYesOrNoFromCordinat(this.segment.label2ColorImage(this.segment.img), this.segment.cordinat_x, this.segment.cordinat_y, sts, "y", "n", num, this.segment.count);
            //===> panggil fungsi untuk menampilkan data label
            this.box_image2.setIcon(new ImageIcon(buff_1));

            this.n_presentase_utuh = (1 - (Math.abs(this.n_presentase_utuh - this.segment.count) / this.segment.count)) * 100;
//            this.n_presentase_utuh = 100 - (this.n_presentase_utuh * 100);

            //===> tampilkan data beras
//            this.setDataTableInformationrice();
//            this.setDataTableInformationDeteksi();
        } else {
            JOptionPane.showMessageDialog(null, "Masukkan gambar terlebih dahulu!");
        }
    }//GEN-LAST:event_btn_ext_utuhActionPerformed

    private void btn_ext_bersihActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_ext_bersihActionPerformed
        // TODO add your handling code here:
        if (this.basic_im.isOpenImage) {
            this.n_presentase_bersih = this.clean.percent;

            int[] num = new int[this.segment.count + 1];
            for (int i = 0; i <= this.segment.count; i++) {
                if (this.size.size[i] <= 451) {
                    num[i] = i;
                } else {
                    num[i] = 0;
                }
            }

            //===> tampilkan beras bersih dan tidak  di layar
            //BufferedImage buff_1 = this.basic_im.drawYesOrNoFromCordinat(this.arrIm.cekBersih2Image(this.clean.data), this.segment.cordinat_x, this.segment.cordinat_y, this.white.whiteRice, "putih", "tidak", num, this.segment.count);
            BufferedImage buff_1 = this.basic_im.drawYesOrNoFromCordinat(this.segment.label2ColorImage(this.segment.img), this.segment.cordinat_x, this.segment.cordinat_y, this.clean.cleanRice, "Bersih", "tidak", num, this.segment.count);

            //===> panggil fungsi untuk menampilkan data label
            this.box_image2.setIcon(new ImageIcon(buff_1));
//            //===> tampilkan data beras
//            this.setDataTableInformationrice();
//            this.setDataTableInformationDeteksi();

        } else {
            JOptionPane.showMessageDialog(null, "Masukkan gambar terlebih dahulu!");
        }
    }//GEN-LAST:event_btn_ext_bersihActionPerformed

    private void btn_ext_putihActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_ext_putihActionPerformed
        // TODO add your handling code here:
        if (this.basic_im.isOpenImage) {
            //====> counter jumlah beras bersih berdasarkan hsv gambar beras
            this.n_presentase_putih = this.white.percent;

            int[] num = new int[this.segment.count + 1];
            for (int i = 0; i <= this.segment.count; i++) {
                if (this.size.size[i] <= 451) {
                    num[i] = i;
                } else {
                    num[i] = 0;
                }
            }

            //===> tampilkan beras bersih dan tidak  di layar
            BufferedImage buff_1 = this.basic_im.drawYesOrNoFromCordinat(this.segment.label2ColorImage(this.segment.img), this.segment.cordinat_x, this.segment.cordinat_y, this.white.whiteRice, "putih", "tidak", num, this.segment.count);
            //BufferedImage buff_1 = this.basic_im.drawYesOrNoFromCordinat(this.arrIm.cekArray2Image(this.white.data), this.segment.cordinat_x, this.segment.cordinat_y, this.white.whiteRice, "putih", "tidak",num, this.segment.count);
            //BufferedImage buff_1 = this.basic_im.drawYesOrNoFromCordinat(this.basic_im.getImageResize(), this.segment.cordinat_x, this.segment.cordinat_y, this.white.whiteRice, "putih", "tidak",num, this.segment.count);

            //===> panggil fungsi untuk menampilkan data label
            this.box_image2.setIcon(new ImageIcon(buff_1));

//            //===> tampilkan data beras
//            this.setDataTableInformationrice();
//            this.setDataTableInformationDeteksi();
        } else {
            JOptionPane.showMessageDialog(null, "Masukkan gambar terlebih dahulu!");
        }
    }//GEN-LAST:event_btn_ext_putihActionPerformed

    private void box_image2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_box_image2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_box_image2ActionPerformed

    private void jTextField_jumlahActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField_jumlahActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField_jumlahActionPerformed

    private void jButton_jumlahActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_jumlahActionPerformed
        // TODO add your handling code here:
        if (this.basic_im.isOpenImage) {
            this.jTextField_jumlah.setText(String.valueOf(this.n_data_object));

            //===> tampilkan data beras
            this.setDataTableInformationrice();
        } else {
            JOptionPane.showMessageDialog(null, "Masukkan gambar terlebih dahulu!");
        }
    }//GEN-LAST:event_jButton_jumlahActionPerformed

    private void btn_id_putihActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_id_putihActionPerformed
        // TODO add your handling code here:
        if (this.basic_im.isOpenImage) {
            //====> counter jumlah beras bersih berdasarkan hsv gambar beras
            this.n_presentase_putih = this.white.percent;
            int[] num = new int[this.segment.count + 1];
            for (int i = 0; i <= this.segment.count; i++) {
                if (this.size.size[i] <= 451) {
                    num[i] = i;
                } else {
                    num[i] = 0;
                }
            }
            BufferedImage buff_1 = this.basic_im.drawYesOrNoFromCordinat(this.segment.seg2RgbImage(this.arrIm.rgb, this.segment.img), this.segment.cordinat_x, this.segment.cordinat_y, this.white.whiteRice, "putih", "tidak", num, this.segment.count);

            //===> panggil fungsi untuk menampilkan data label
            this.box_image2.setIcon(new ImageIcon(buff_1));

            //===> tampilkan data beras
            this.setDataTableInformationrice();
            this.addDataInfoPutih();

            this.text_putih.setText(String.valueOf(white.nWhiteRice));

        } else {
            JOptionPane.showMessageDialog(null, "Masukkan gambar terlebih dahulu!");
        }
    }//GEN-LAST:event_btn_id_putihActionPerformed

    private void btn_id_bersihActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_id_bersihActionPerformed
        // TODO add your handling code here:
        if (this.basic_im.isOpenImage) {
            this.n_presentase_bersih = this.clean.percent;

            int[] num = new int[this.segment.count + 1];
            for (int i = 0; i <= this.segment.count; i++) {
                if (this.size.size[i] <= 451) {
                    num[i] = i;
                } else {
                    num[i] = 0;
                }
            }
            BufferedImage buff_1 = this.basic_im.drawYesOrNoFromCordinat(this.segment.seg2RgbImage(this.arrIm.rgb, this.segment.img), this.segment.cordinat_x, this.segment.cordinat_y, this.clean.cleanRice, "Bersih", "tidak", num, this.segment.count);

            //===> panggil fungsi untuk menampilkan data label
            this.box_image2.setIcon(new ImageIcon(buff_1));

            //===> tampilkan data beras
            this.setDataTableInformationrice();
            this.addDataInfoBersih();

            this.text_bersih.setText(String.valueOf(clean.nCleanRice));

        } else {
            JOptionPane.showMessageDialog(null, "Masukkan gambar terlebih dahulu!");
        }
    }//GEN-LAST:event_btn_id_bersihActionPerformed

    private void btn_id_utuhActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_id_utuhActionPerformed
        // TODO add your handling code here:
        if (this.basic_im.isOpenImage) {

            this.presentase_utuh = 0;
            int nSize = 0;
            boolean sts[] = new boolean[this.segment.count + 1];
            //int sts[] = new int[this.segment.count + 1];
            for (int i = 1; i <= this.segment.count; i++) {
                if (this.size.size[i] >= 278) {
                    this.presentase_utuh = this.presentase_utuh + 1;
                    sts[i] = true;
                    nSize++;
                } else {
                    sts[i] = false;
                }
            }

            int[] num = new int[this.segment.count + 1];
            for (int i = 0; i <= this.segment.count; i++) {
                if (this.size.size[i] <= 451) {
                    num[i] = i;
                } else {
                    num[i] = 0;
                }
            }
            BufferedImage buff_1 = this.basic_im.drawYesOrNoFromCordinat(this.segment.seg2RgbImage(this.arrIm.rgb, this.segment.img), this.segment.cordinat_x, this.segment.cordinat_y, sts, "y", "n", num, this.segment.count);

            //===> panggil fungsi untuk menampilkan data label
            this.box_image2.setIcon(new ImageIcon(buff_1));

            //===> tampilkan data beras
            this.setDataTableInformationrice();
            this.addDataInfoUtuh();

            this.text_utuh.setText(String.valueOf(nSize));
        } else {
            JOptionPane.showMessageDialog(null, "Masukkan gambar terlebih dahulu!");
        }
    }//GEN-LAST:event_btn_id_utuhActionPerformed

    public class printData {

        public String clm_no;
        public String clm_tgl;
        public String clm_putih;
        public String clm_bersih;
        public String clm_utuh;
        public String clm_id3;
        public String clm_c45;

        public void setCol(String clm_no, String clm_tgl, String clm_putih, String clm_bersih, String clm_utuh, String clm_id3, String clm_c45) {
            this.clm_no = clm_no;
            this.clm_tgl = clm_tgl;
            this.clm_putih = clm_putih;
            this.clm_bersih = clm_bersih;
            this.clm_utuh = clm_utuh;
            this.clm_id3 = clm_id3;
            this.clm_c45 = clm_c45;
        }

        public String getclm_no() {
            return clm_no;
        }

        public String getclm_tgl() {
            return clm_tgl;
        }

        public String getclm_putih() {
            return clm_putih;
        }

        public String getclm_bersih() {
            return clm_bersih;
        }

        public String getclm_utuh() {
            return clm_utuh;
        }

        public String getclm_id3() {
            return clm_id3;
        }

        public String getclm_c45() {
            return clm_c45;
        }

        public void setclm_no(String clm_no) {
            this.clm_no = clm_no;
        }

        public void setclm_tgl(String clm_tgl) {
            this.clm_tgl = clm_tgl;
        }

        public void setclm_putih(String clm_putih) {
            this.clm_putih = clm_putih;
        }

        public void setclm_bersih(String clm_bersih) {
            this.clm_bersih = clm_bersih;
        }

        public void setclm_utuh(String clm_utuh) {
            this.clm_utuh = clm_utuh;
        }

        public void setclm_id3(String clm_id3) {
            this.clm_id3 = clm_id3;
        }

        public void setclm_c45(String clm_c45) {
            this.clm_c45 = clm_c45;
        }

    }

    public void setDataTableInformationrice() {
        int n_row = this.table_rice.getRowCount();
        for (int i = 0; i < n_row; i++) {
            DefaultTableModel model = (DefaultTableModel) this.table_rice.getModel();
            model.removeRow(0);
        }

        DefaultTableModel model = (DefaultTableModel) this.table_rice.getModel();

        model.addRow(new Object[]{});
        this.table_rice.setValueAt("Jumlah : ", 0, 0);
        this.table_rice.setValueAt(String.valueOf(this.n_data_object), 0, 1);

        model.addRow(new Object[]{});
        this.table_rice.setValueAt("Putih : ", 1, 0);
        this.table_rice.setValueAt(String.valueOf(Math.floor(this.n_presentase_putih)) + "%", 1, 1);

        String hasil;
        if (this.is_putih(percent_putih)) {
            hasil = "Ya";
        } else {
            hasil = "Tidak";
        }
        this.table_rice.setValueAt(hasil, 1, 2);

        model.addRow(new Object[]{});
        this.table_rice.setValueAt("Bersih : ", 2, 0);
        this.table_rice.setValueAt(String.valueOf(Math.floor(this.n_presentase_bersih)) + "%", 2, 1);

        if (this.is_bersih(percent_bersih)) {
            hasil = "Ya";
        } else {
            hasil = "Tidak";
        }
        this.table_rice.setValueAt(hasil, 2, 2);

        model.addRow(new Object[]{});
        this.table_rice.setValueAt("Utuh : ", 3, 0);
        this.table_rice.setValueAt(String.valueOf(Math.floor(this.n_presentase_utuh)) + "%", 3, 1);

        if (this.is_utuh(percent_utuh)) {
            hasil = "Ya";
        } else {
            hasil = "Tidak";
        }
        this.table_rice.setValueAt(hasil, 3, 2);

    }

    public void addDataInfoPutih() {
        int n_row = this.segment.count + 1;
        for (int i = 1; i < n_row; i++) {
            String hasil;
            if (white.whiteRice[i]) {
                hasil = "Putih";
            } else {
                hasil = "Tidak";
            }
            DefaultTableModel model = (DefaultTableModel) this.jTable_info.getModel();
            model.addRow(new Object[]{});
            this.jTable_info.setValueAt(String.valueOf(i), i - 1, 0);
            this.jTable_info.setValueAt(hasil, i - 1, 1);
        }
    }

    public void addDataInfoBersih() {
        int n_row = this.segment.count + 1;
        //int row[] = new int[n_row + 1];
        for (int i = 1; i < n_row; i++) {
            String hasil;
            if (clean.cleanRice[i]) {
                hasil = "Bersih";
            } else {
                hasil = "Tidak";
            }
            DefaultTableModel model = (DefaultTableModel) this.jTable_info.getModel();
            model.addRow(new Object[]{});
            this.jTable_info.setValueAt(String.valueOf(i), i - 1, 0);
            this.jTable_info.setValueAt(hasil, i - 1, 2);
        }
    }

    public void addDataInfoUtuh() {

        boolean sts[] = new boolean[this.segment.count + 1];
        //int sts[] = new int[this.segment.count + 1];
        for (int i = 1; i <= this.segment.count; i++) {
            sts[i] = this.size.size[i] >= 278;
        }

        int n_row = this.segment.count + 1;
        //int row[] = new int[n_row + 1];
        for (int i = 1; i < n_row; i++) {
            String hasil;
            if (sts[i]) {
                hasil = "Utuh";
            } else {
                hasil = "Tidak";
            }
            DefaultTableModel model = (DefaultTableModel) this.jTable_info.getModel();
            model.addRow(new Object[]{});
            this.jTable_info.setValueAt(String.valueOf(i), i - 1, 0);
            this.jTable_info.setValueAt(hasil, i - 1, 3);
        }
    }

    public void addNewDataIntoLog() {

        long milisecond = System.currentTimeMillis();
        DateFormat dateFormat = new SimpleDateFormat("dd/MM/yyyy HH:mm:ss");
        Date date = new Date(milisecond);
        String tanggal = dateFormat.format(date);

        int n_row = this.tbl_data_log.getRowCount();
        DefaultTableModel model = (DefaultTableModel) this.tbl_data_log.getModel();
        model.addRow(new Object[]{});
        this.tbl_data_log.setValueAt(String.valueOf(n_row), n_row, 0);
//        this.tbl_data_log.setValueAt(String.valueOf(dt.getDay() + 5) + "-" + String.valueOf(dt.getMonth() + 1) + "-" + String.valueOf(dt.getYear() + 1899), n_row, 1);
        this.tbl_data_log.setValueAt(tanggal, n_row, 1);
        this.tbl_data_log.setValueAt(String.valueOf(Math.floor(this.n_presentase_putih)) + "%", n_row, 2);
        this.tbl_data_log.setValueAt(String.valueOf(Math.floor(this.n_presentase_bersih)) + "%", n_row, 3);
        this.tbl_data_log.setValueAt(String.valueOf(Math.floor(this.n_presentase_utuh)) + "%", n_row, 4);
        this.tbl_data_log.setValueAt(this.decision_id3(), n_row, 5);
        this.tbl_data_log.setValueAt(this.decision_c45(), n_row, 6);
    }

    public boolean is_utuh(double percent) {
        return this.n_presentase_utuh >= percent;
    }

    public boolean is_putih(double percent) {
        return this.n_presentase_putih >= percent;
    }

    public boolean is_bersih(double percent) {
        return this.n_presentase_bersih >= percent;
    }

    public String decision_id3() {
        String result = "";
        if (this.is_bersih(percent_bersih) && this.is_putih(percent_putih)) {
            result = "Baik";
        } else if (this.is_bersih(percent_bersih) && !this.is_putih(percent_putih) && this.is_utuh(percent_utuh)) {
            result = "Baik";
        } else if (this.is_bersih(percent_bersih) && !this.is_putih(percent_putih) && !this.is_utuh(percent_utuh)) {
            result = "Kurang";
        } else if (!this.is_bersih(percent_bersih) && this.is_putih(percent_putih)) {
            result = "Kurang";
        } else if (!this.is_bersih(percent_bersih) && !this.is_putih(percent_putih)) {
            result = "Buruk";
        }
        return result;
    }

    public String decision_c45() {
        String result = "";
        if (this.is_bersih(percent_bersih) && this.is_putih(percent_putih)) {
            result = "Baik";
        } else if (this.is_bersih(percent_bersih) && !this.is_putih(percent_putih)) {
            result = "Kurang";
        } else if (!this.is_bersih(percent_bersih) && this.is_putih(percent_putih)) {
            result = "Kurang";
        } else if (!this.is_bersih(percent_bersih) && !this.is_putih(percent_putih)) {
            result = "Buruk";
        }
        return result;
    }

    public void decision() {
        this.txt_id3.setText(this.decision_id3());
        this.txt_c45.setText(this.decision_c45());
    }

    public void blankOutput() {
        int n_row = this.table_rice.getRowCount();
        for (int i = 0; i < n_row; i++) {
            DefaultTableModel model = (DefaultTableModel) this.table_rice.getModel();
            model.removeRow(0);
        }

        n_row = this.jTable_info.getRowCount();
        for (int i = 0; i < n_row; i++) {
            DefaultTableModel model = (DefaultTableModel) this.jTable_info.getModel();
            model.removeRow(0);
        }

        this.txt_id3.setText("_");
        this.txt_c45.setText("_");
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(MainGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(MainGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(MainGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(MainGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new MainGui().setVisible(true);
//            }
//        });
    }

    private void closeAction() {
        this.addWindowListener(new java.awt.event.WindowAdapter() {
            @Override
            public void windowClosing(java.awt.event.WindowEvent windowEvent) {
                int dialogButton = JOptionPane.showConfirmDialog(
                        null, "Apakah anda yakin ingin keluar?", "Konfirmasi",
                        JOptionPane.OK_CANCEL_OPTION);
                if (dialogButton == JOptionPane.OK_OPTION) {
                    System.exit(0);
                }
                setDefaultCloseOperation(DO_NOTHING_ON_CLOSE);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton box_image2;
    private javax.swing.JButton box_img_ori;
    private javax.swing.JButton btn_browse;
    private javax.swing.JButton btn_ext_bersih;
    private javax.swing.JButton btn_ext_putih;
    private javax.swing.JButton btn_ext_utuh;
    private javax.swing.JButton btn_histogram;
    private javax.swing.JButton btn_id3_clasification;
    private javax.swing.JButton btn_id_bersih;
    private javax.swing.JButton btn_id_putih;
    private javax.swing.JButton btn_id_utuh;
    private javax.swing.JButton btn_idc45_clasification;
    private javax.swing.JButton btn_label_jumlah;
    private javax.swing.JButton btn_print;
    private javax.swing.JComboBox countRice;
    private javax.swing.JButton jButton_biner;
    private javax.swing.JButton jButton_grayscale;
    private javax.swing.JButton jButton_jumlah;
    private javax.swing.JButton jButton_reset;
    private javax.swing.JButton jButton_segment;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JTable jTable_info;
    private javax.swing.JTextField jTextField_jumlah;
    private javax.swing.JPanel panel;
    private javax.swing.JTabbedPane tab;
    private javax.swing.JPanel tab_home;
    private javax.swing.JPanel tab_report;
    private javax.swing.JPanel tab_riceQuality;
    private javax.swing.JTable table_rice;
    private javax.swing.JTable tbl_data_log;
    private javax.swing.JTextField text_bersih;
    private javax.swing.JTextField text_putih;
    private javax.swing.JTextField text_utuh;
    private javax.swing.JLabel txt_c45;
    private javax.swing.JLabel txt_id3;
    private javax.swing.JTextField txt_path_image;
    // End of variables declaration//GEN-END:variables
}
